name: 'AnalysisServices - Servers'

parameters:
  - name: removeDeployment
    displayName: Remove deployed module
    type: boolean
    default: true
  - name: prerelease
    displayName: Publish prerelease module
    type: boolean
    default: false

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - '/.azuredevops/modulePipelines/ms.analysisservices.servers.yml'
      - '/.azuredevops/pipelineTemplates/module.*.yml'
      - '/arm/Microsoft.AnalysisServices/servers/*'
    exclude:
      - '/**/*.md'

variables:
  - template: '/.azuredevops/pipelineVariables/global.variables.yml'
  - group: 'PLATFORM_VARIABLES'
  - name: modulePath
    value: '/arm/Microsoft.AnalysisServices/servers'

stages:
  - stage: PlatformSettings
    displayName: Platform Settings
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.platformSettings.yml
        parameters:
          settingsPath: 'settings.json'

  #- stage: Validation
  #  displayName: Pester tests
  #  jobs:
  #    - template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  - stage: Deployment
    #condition: eq(variables[ stageDependencies.PlatformSettings.job_platformSettings.outputs['task_featureFlags.resourceModules_deployment'] ], 'true')
    variables:
      resourceModules_deployment: $[ stageDependencies.PlatformSettings.job_platformSettings.outputs['task_featureFlags.resourceModules_deployment'] ]
    dependsOn: PlatformSettings
    displayName: Deployment tests
    jobs:
      #- template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
      #  parameters:
      #    removeDeployment: '${{ parameters.removeDeployment }}'
      #    deploymentBlocks:
      #      - path: $(modulePath)/.parameters/min.parameters.json
      #      - path: $(modulePath)/.parameters/parameters.json
      - job: test_environment
        displayName: Test Environment
        condition: eq(variables.['stageDependencies.PlatformSettings.job_platformSettings.outputs['task_featureFlags.resourceModules_deployment'] ]'], 'true')
        variables:
          someName: $[ stageDependencies.PlatformSettings.job_platformSettings.outputs['task_featureFlags.resourceModules_deployment'] ]
        steps:
          - task: PowerShell@2
            name: task_test_environment
            displayName: 'Test Environment'
            inputs:
              targetType: inline
              pwsh: true
              script: |
                'my var is $(resourceModules_deployment)'
                'my var is $(someName)'
  #- stage: Publishing
  #  displayName: Publish module
  #  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.prerelease }}', 'true')))
  #  jobs:
  #    - template: /.azuredevops/pipelineTemplates/jobs.publishModule.yml
