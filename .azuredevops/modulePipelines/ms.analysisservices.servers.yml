name: 'AnalysisServices - Servers'

parameters:
  - name: removeDeployment
    displayName: Remove deployed module
    type: boolean
    default: true
  - name: prerelease
    displayName: Publish prerelease module
    type: boolean
    default: false

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - '/.azuredevops/modulePipelines/ms.analysisservices.servers.yml'
      - '/.azuredevops/pipelineTemplates/module.*.yml'
      - '/arm/Microsoft.AnalysisServices/servers/*'
    exclude:
      - '/**/*.md'

variables:
  #- template: '/.azuredevops/pipelineVariables/global.variables.yml'
  - name: 'vmImage'
    value: 'ubuntu-latest'
  - name: 'poolName'
    value: ''
  #- name: 'serviceConnection'
  #  value: 'AzureConnection'
  - group: 'PLATFORM_VARIABLES'
  - name: modulePath
    value: '/arm/Microsoft.AnalysisServices/servers'

stages:
  - stage: CheckoutPlatformSettings
    displayName: Checkout Platform Settings
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.checkoutPlatformSettings.yml
        parameters:
          settingsPath: '$(System.DefaultWorkingDirectory)/settings.json'

  - stage: Validation
    dependsOn: CheckoutPlatformSettings
    variables:
      resourceModules_pesterTests: $[ stageDependencies.CheckoutPlatformSettings.job_checkoutPlatformSettings.outputs['task_featureFlags.resourceModules_pesterTests'] ]
    displayName: Pester tests
    jobs:
      - ${{ if eq(variables.resourceModules_pesterTests, 'true') }}:
        template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  - stage: Deployment
    dependsOn: CheckoutPlatformSettings
    variables:
      resourceModules_deployment: $[ stageDependencies.CheckoutPlatformSettings.job_checkoutPlatformSettings.outputs['task_featureFlags.resourceModules_deployment'] ]
    displayName: Deployment tests
    jobs:
      - ${{ if eq(variables.resourceModules_deployment, 'true') }}:
        template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
        parameters:
          removeDeployment: '${{ parameters.removeDeployment }}'
          deploymentBlocks:
            - path: $(modulePath)/.parameters/min.parameters.json
            #- path: $(modulePath)/.parameters/parameters.json
      #- job: test_environment
      #  dependsOn: job_setEnvironmentVariables
      #  displayName: Test Environment
      #  condition: eq(variables.resourceModules_deployment, 'true')
      #  steps:
      #    - task: PowerShell@2
      #      name: task_test_environment
      #      displayName: 'Test Environment'
      #      inputs:
      #        targetType: inline
      #        pwsh: true
      #        script: |
      #          'my var is $(resourceModules_deployment)'
      #          '-----'
      #          'my env var is $(sharedVariable1Key)'
#
#- stage: Publishing
#  displayName: Publish module
#  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.prerelease }}', 'true')))
#  jobs:
#    - template: /.azuredevops/pipelineTemplates/jobs.publishModule.yml
