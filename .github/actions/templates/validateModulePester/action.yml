name: 'Execute Pester module tests'
description: 'Execute Pester module tests (if any)'

inputs:
  modulePath:
    description: 'The path to the module folder'
    required: true
    default: ''

runs:
  using: 'composite'
  steps:
    - name: 'Setup agent'
      shell: pwsh
      run: |
        # Load used functions
        . (Join-Path $env:GITHUB_WORKSPACE 'utilities' 'pipelines' 'sharedScripts' 'Set-EnvironmentOnAgent.ps1')

        # Set agent up
        Set-EnvironmentOnAgent

    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    # [Module Pester Test] task(s)
    #-----------------------------
    - name: 'Run global tests via Pester'
      shell: pwsh
      run: |
        # --------------------- #
        # INVOKE PESTER TEST(S) #
        # --------------------- #
        Invoke-Pester -Configuration @{
          Run        = @{
            Container = New-PesterContainer -Path 'arm/.global/global.module.tests.ps1' -Data @{
              moduleFolderPaths = Join-Path $env:GITHUB_WORKSPACE "${{ inputs.modulePath }}"
            }
          }
          Filter     = @{
            ExcludeTag = 'ApiCheck'
          }
          TestResult = @{
            TestSuiteName = 'Global Module Tests'
            OutputPath    = 'arm/.global/global-testResults.xml'
            OutputFormat  = 'JUnitXml'
            Enabled       = $true
          }
          Output     = @{
            Verbosity = 'Detailed'
          }
        }

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: arm/.global/global-testResults.xml

    # [Module Pester Test] task(s)
    #-----------------------------
    - name: 'Run API tests via Pester'
      shell: pwsh
      run: |
        # --------------------- #
        # Invoke Pester test(s) #
        # --------------------- #
        Invoke-Pester -Configuration @{
          Run        = @{
            Container = New-PesterContainer -Path 'arm/.global/global.module.tests.ps1' -Data @{
              moduleFolderPaths = Join-Path $env:GITHUB_WORKSPACE "${{ inputs.modulePath }}"
            }
          }
          Filter     = @{
            Tag = 'ApiCheck'
          }
          TestResult = @{
            TestSuiteName = 'Global Module API Tests'
            OutputPath    = 'arm/.global/api-testResults.xml'
            OutputFormat  = 'JUnitXml'
            Enabled       = $true
          }
          Output     = @{
            Verbosity = 'Detailed'
          }
        }

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: arm/.global/api-testResults.xml
